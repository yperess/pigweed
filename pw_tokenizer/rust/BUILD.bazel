# Copyright 2023 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load("@rules_rust//rust:defs.bzl", "rust_doc", "rust_doc_test", "rust_library", "rust_proc_macro", "rust_test")

rust_proc_macro(
    name = "pw_tokenizer_macro",
    srcs = [
        "pw_tokenizer_macro.rs",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":pw_tokenizer_core",
        "//pw_format/rust:pw_format",
        "//pw_status/rust:pw_status",
        "@rust_crates//:proc-macro2",
        "@rust_crates//:quote",
        "@rust_crates//:syn",
    ],
)

rust_test(
    name = "pw_tokenizer_macro_test",
    crate = ":pw_tokenizer_macro",
)

rust_library(
    name = "pw_tokenizer_core",
    srcs = [
        "pw_tokenizer_core.rs",
        "pw_tokenizer_core_test_cases.rs",
    ],
    crate_features = select({
        "@rust_crates//:std": ["std"],
        "//conditions:default": [""],
    }),
    visibility = ["//visibility:public"],
)

rust_test(
    name = "pw_tokenizer_core_test",
    crate = ":pw_tokenizer_core",
    crate_features = select({
        "@rust_crates//:std": ["std"],
        "//conditions:default": [""],
    }),
)

rust_doc_test(
    name = "pw_tokenizer_core_doc_test",
    crate = ":pw_tokenizer_core",
)

rust_doc(
    name = "pw_tokenizer_core_doc",
    crate = ":pw_tokenizer_core",
)

rust_library(
    name = "pw_tokenizer",
    srcs = [
        "pw_tokenizer/internal.rs",
        "pw_tokenizer/lib.rs",
    ],
    crate_features = select({
        "@rust_crates//:std": ["std"],
        "//conditions:default": [""],
    }),
    proc_macro_deps = [":pw_tokenizer_macro"],
    visibility = ["//visibility:public"],
    deps = [
        ":pw_tokenizer_core",
        "//pw_bytes/rust:pw_bytes",
        "//pw_format/rust:pw_format_core",
        "//pw_status/rust:pw_status",
        "//pw_stream/rust:pw_stream",
        "//pw_varint/rust:pw_varint",
    ] + select({
        "@rust_crates//:std": [
            "//pw_format/rust:pw_format",  # Added for rustdoc linking support.
        ],
        "//conditions:default": [],
    }),
)

rust_test(
    name = "pw_tokenizer_test",
    crate = ":pw_tokenizer",
    crate_features = select({
        "@rust_crates//:std": ["std"],
        "//conditions:default": [""],
    }),
)

rust_doc_test(
    name = "pw_tokenizer_doc_test",
    crate = ":pw_tokenizer",
)

rust_doc(
    name = "pw_tokenizer_doc",
    crate = ":pw_tokenizer",
)
